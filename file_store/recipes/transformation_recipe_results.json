{
  "metadata": {
    "file_type": "results",
    "generated_at": "2025-09-28T13:32:34.421209",
    "data_shape": {
      "rows": 2718,
      "columns": 8
    },
    "data_columns": [
      "sample_id",
      "cancer_detected",
      "detection_value",
      "sample_quality",
      "sample_quality_threshold",
      "sample_status",
      "fail_reason",
      "date_of_run"
    ],
    "schema_columns": [
      "sample_id",
      "detection_value",
      "cancer_detected",
      "sample_status",
      "fail_reason",
      "sample_quality",
      "sample_quality_threshold",
      "date_of_run"
    ]
  },
  "transformation_steps": [
    {
      "step_number": 1,
      "step_name": "pre_validation",
      "description": "Validate data before cleaning",
      "enabled": true,
      "parameters": {
        "schema_type": "results",
        "lazy": true,
        "capture_errors": true
      }
    },
    {
      "step_number": 2,
      "step_name": "column_mapping",
      "description": "Map and standardize column names",
      "enabled": true,
      "parameters": {
        "column_mappings": {
          " detection_value ": "detection_value",
          "cancer_detected_(yes_no)": "cancer_detected",
          "sample_status(running/finished/failed)": "sample_status",
          "fail_reason(technical/quality)": "fail_reason",
          "sample_quality_minimum_threshold": "sample_quality_threshold",
          "date of run": "date_of_run"
        }
      }
    },
    {
      "step_number": 3,
      "step_name": "value_mapping",
      "description": "Standardize and map data values",
      "enabled": true,
      "parameters": {
        "value_mappings": {
          "sample_status": {
            "finished": "Finished",
            "Finished": "Finished",
            "running": "Running",
            "Running": "Running",
            "failed": "Failed",
            "Failed": "Failed",
            "completed": "Completed",
            "Completed": "Completed",
            "error": "Error",
            "Error": "Error",
            "inprogress": "InProgress",
            "InProgress": "InProgress"
          },
          "detection_value": {
            "  ": null,
            " ": null,
            "": null,
            "N/A": null,
            "NA": null,
            "nan": null,
            "NaN": null,
            "null": null,
            "NULL": null
          },
          "cancer_detected": {
            "Yes": "Yes",
            "No": "No",
            "Y": "Yes",
            "N": "No",
            "True": "Yes",
            "False": "No",
            "1": "Yes",
            "0": "No",
            "yes": "Yes",
            "no": "No",
            "NA": null,
            "nan": null,
            "NaN": null,
            "N/A": null,
            "n/a": null
          }
        }
      }
    },
    {
      "step_number": 4,
      "step_name": "string_standardization",
      "description": "Clean and standardize string columns",
      "enabled": true,
      "parameters": {
        "columns": [
          "sample_id",
          "cancer_detected",
          "sample_status",
          "fail_reason"
        ],
        "operations": [
          "strip",
          "lower",
          "remove_extra_spaces"
        ]
      }
    },
    {
      "step_number": 5,
      "step_name": "missing_value_handling",
      "description": "Handle missing values based on schema rules",
      "enabled": true,
      "parameters": {
        "required_columns": [
          "sample_id"
        ],
        "nullable_columns": [
          "detection_value",
          "cancer_detected",
          "sample_status",
          "fail_reason",
          "sample_quality",
          "sample_quality_threshold",
          "date_of_run"
        ],
        "default_strategies": {
          "string": "empty_string",
          "numeric": "none",
          "datetime": "none"
        }
      }
    },
    {
      "step_number": 6,
      "step_name": "type_conversion",
      "description": "Convert data types to match schema",
      "enabled": true,
      "parameters": {
        "type_mappings": {
          "sample_id": "str",
          "detection_value": "float64",
          "cancer_detected": "str",
          "sample_status": "str",
          "fail_reason": "str",
          "sample_quality": "float64",
          "sample_quality_threshold": "float64",
          "date_of_run": "datetime64[ns]"
        },
        "coerce_errors": true
      }
    },
    {
      "step_number": 7,
      "step_name": "constraint_application",
      "description": "Apply schema constraints and checks",
      "enabled": true,
      "parameters": {
        "constraints": {
          "detection_value": {
            "min_value": 0.0,
            "max_value": 1.0
          },
          "cancer_detected": {
            "allowed_values": [
              "Yes",
              "No"
            ]
          },
          "sample_status": {
            "allowed_values": [
              "Running",
              "Finished",
              "Failed",
              "InProgress",
              "Completed",
              "Error"
            ]
          },
          "sample_quality": {
            "min_value": 0.0,
            "max_value": 1.0
          },
          "sample_quality_threshold": {
            "min_value": 0.0,
            "max_value": 1.0
          }
        }
      }
    },
    {
      "step_number": 7,
      "step_name": "duplicate_removal",
      "description": "Remove duplicates based on key columns: ['sample_id']",
      "enabled": true,
      "parameters": {
        "subset": [
          "sample_id"
        ],
        "keep": "first"
      }
    },
    {
      "step_number": 8,
      "step_name": "post_validation",
      "description": "Validate cleaned data against schema",
      "enabled": true,
      "parameters": {
        "schema_type": "results",
        "lazy": true,
        "strict_mode": false
      }
    }
  ],
  "schema_analysis": {
    "total_columns": 8,
    "required_columns": [
      "sample_id"
    ],
    "nullable_columns": [
      "detection_value",
      "cancer_detected",
      "sample_status",
      "fail_reason",
      "sample_quality",
      "sample_quality_threshold",
      "date_of_run"
    ],
    "data_types": {
      "sample_id": "str",
      "detection_value": "float64",
      "cancer_detected": "str",
      "sample_status": "str",
      "fail_reason": "str",
      "sample_quality": "float64",
      "sample_quality_threshold": "float64",
      "date_of_run": "datetime64[ns]"
    },
    "constraints": {
      "detection_value": {
        "min_value": 0.0,
        "max_value": 1.0
      },
      "cancer_detected": {
        "allowed_values": [
          "Yes",
          "No"
        ]
      },
      "sample_status": {
        "allowed_values": [
          "Running",
          "Finished",
          "Failed",
          "InProgress",
          "Completed",
          "Error"
        ]
      },
      "sample_quality": {
        "min_value": 0.0,
        "max_value": 1.0
      },
      "sample_quality_threshold": {
        "min_value": 0.0,
        "max_value": 1.0
      }
    },
    "checks": {
      "detection_value": [
        {
          "check_type": "Check",
          "description": null,
          "min_value": 0.0
        },
        {
          "check_type": "Check",
          "description": null,
          "max_value": 1.0
        }
      ],
      "cancer_detected": [
        {
          "check_type": "Check",
          "description": null,
          "allowed_values": [
            "Yes",
            "No"
          ]
        }
      ],
      "sample_status": [
        {
          "check_type": "Check",
          "description": null,
          "allowed_values": [
            "Running",
            "Finished",
            "Failed",
            "InProgress",
            "Completed",
            "Error"
          ]
        }
      ],
      "sample_quality": [
        {
          "check_type": "Check",
          "description": null,
          "min_value": 0.0
        },
        {
          "check_type": "Check",
          "description": null,
          "max_value": 1.0
        }
      ],
      "sample_quality_threshold": [
        {
          "check_type": "Check",
          "description": null,
          "min_value": 0.0
        },
        {
          "check_type": "Check",
          "description": null,
          "max_value": 1.0
        }
      ]
    },
    "missing_critical_rules": []
  },
  "column_mappings": {
    "sample_id": "sample_id",
    "detection_value": "detection_value",
    "cancer_detected": "cancer_detected",
    "sample_status": "sample_status",
    "fail_reason": "fail_reason",
    "sample_quality": "sample_quality",
    "sample_quality_threshold": "sample_quality_threshold",
    "date_of_run": "date_of_run"
  }
}